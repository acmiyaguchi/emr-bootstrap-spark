- name: provision aws resources
  hosts: localhost
  vars:
    metastore_stack: "{{cloudformation[telemetry_analysis_metastore_stack_name]}}"
    metastore_dns: "{{metastore_stack.stack_outputs.ClusterDNS}}"

  tasks:
    - name: lookup metastore stack
      cloudformation_facts:
        stack_name: "{{telemetry_analysis_metastore_stack_name}}"
        region: "{{telemetry_analysis_region}}"

    - name: launch cloudformation
      cloudformation:
        stack_name: "{{stack_name}}"
        state: "present"
        region: "{{telemetry_analysis_region}}"
        disable_rollback: true
        template: "{{playbook_dir}}/files/cloudformation.json"
        tags:
          type: "telemetry"
          application: "spark"
        template_parameters:
          TelemetryAnalysisCodeBucket: "{{telemetry_analysis_code_bucket}}"
          TelemetryAnalysisSparkEMRBucket: "{{telemetry_analysis_spark_emr_bucket}}"
          TelemetryAnalysisPublicBucket: "{{telemetry_analysis_public_bucket}}"
          TelemetryAnalysisPrivateBucket: "{{telemetry_analysis_private_bucket}}"
          TelemetryAnalysisLogsBucket: "{{telemetry_analysis_logs_bucket}}"
          TelemetryAnalysisIAMRole: "{{telemetry_analysis_iam_role}}"

    - name: create bucket
      s3: bucket={{telemetry_analysis_spark_emr_bucket}} region={{telemetry_analysis_region}} mode=create

    - name: copy private EMR files
      include: render_and_copy_to_s3.yml file={{item}} permission="private"
      with_items:
        - steps/batch.sh
        - steps/zeppelin/zeppelin.sh
        - steps/zeppelin/note.json
        - configuration/zeppelin/interpreter.json
        - bootstrap/telemetry.sh
        - bootstrap/python-requirements.txt
        - bootstrap/python3-requirements.txt
        - bootstrap/fairscheduler.xml

    - name: copy public EMR files
      include: render_and_copy_to_s3.yml file={{item}} permission="public-read"
      with_items:
        - configuration/configuration.json

    - name: EFS security group in region us-west-2
      local_action:
        module: ec2_group
        name: atmo-efs-access
        description: EFS Access
        region: us-west-2
        rules:
          - proto: tcp
            from_port: 2049
            to_port: 2049
            group_name: ElasticMapReduce-master
          - proto: tcp
            from_port: 2049
            to_port: 2049
            group_name: ElasticMapReduce-slave
      register: efs_access

    - name: create EFS volume
      efs:
        state: present
        name: "{{efs_creation_token}}"
        tags:
            Name: "{{efs_volume_name}}"
            App: telemetry-analysis
        targets:
            - subnet_id: subnet-63f72706
              security_groups: [ "{{ efs_access.group_id }}" ]
            - subnet_id: subnet-4228de35
              security_groups: [ "{{ efs_access.group_id }}" ]
            - subnet_id: subnet-b2c3d5f4
              security_groups: [ "{{ efs_access.group_id }}" ]
